<?php

/**
 * Created by PhpStorm.
 * User: Hoàng Nguyễn
 * Date: 10/03/2019
 * Time: 21:45
 */

namespace App\Controller\Home;
use App\Controller\Home\HomesController;
use Cake\ORM\TableRegistry;

class RegistrationController extends HomesController {

    public function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Users');
        $this->loadModel('Roles');     
        $this->loadComponent('validation');
    }

    public function index() {

        if ($this->request->isPost()) {
            //get data form login
            $req_user = $this->request->getData();
            $validation = $this->Users->newEntity($req_user,['validate'=>'Regestration']);
            $validationError = $validation->errors();
            if (empty($validationError)) {
                //set birthday user
                $strBirthDay = $req_user["birthday"]["year"] . '/' . $req_user["birthday"]["month"] . '/' . $req_user["birthday"]["day"];
                $birthDay = date_format(date_create($strBirthDay), 'Y/m/d');
                //set password md5
                $passwordMd5 = md5($req_user['password']);
                //add user
                $newUser = $this->Users->newEntity();
                $newUser->username = $req_user['username'];
                $newUser->password = $passwordMd5;
                $newUser->name = $req_user['name'];
                $newUser->sex = $req_user['sex'];
                $newUser->birthday = $birthDay;
                $newUser->phonenumber = $req_user['phonenumber'];
                $newUser->address = $req_user['address'];
                $this->Users->save($newUser);
                //add role
                $newRole = $this->Roles->newEntity();
                $newRole->role_details_id = 1;
                $newRole->users_id = $this->Users->find('all', [
                            'conditions' => ['username' => $newUser['username']]
                        ])->first()['ID'];
                $this->Roles->save($newRole);
            } else {
               $this->Flash->error($this->validation->getmessage($validationError));
            }
        }
    }

}
